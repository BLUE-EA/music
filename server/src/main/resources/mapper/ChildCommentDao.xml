<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.music.dao.ChildCommentDao">
  <resultMap id="BaseResultMap" type="com.springboot.music.domain.ChildComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="father_id" jdbcType="INTEGER" property="fatherId" />
    <result column="from" jdbcType="INTEGER" property="from" />
    <result column="to" jdbcType="INTEGER" property="to" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="up" jdbcType="INTEGER" property="up" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, father_id, `from`, `to`, content, up, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from child_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByFatherId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from child_comment
    where father_id = #{fatherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from child_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByFatherId" parameterType="java.lang.Integer">
    delete from child_comment
    where father_id = #{fatherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.springboot.music.domain.ChildComment" useGeneratedKeys="true">
    insert into child_comment (father_id, `from`, `to`, 
      content, up, create_time
      )
    values (#{fatherId,jdbcType=INTEGER}, #{from,jdbcType=INTEGER}, #{to,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{up,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.springboot.music.domain.ChildComment" useGeneratedKeys="true">
    insert into child_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fatherId != null">
        father_id,
      </if>
      <if test="from != null">
        `from`,
      </if>
      <if test="to != null">
        `to`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="up != null">
        up,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fatherId != null">
        #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="from != null">
        #{from,jdbcType=INTEGER},
      </if>
      <if test="to != null">
        #{to,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="up != null">
        #{up,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.music.domain.ChildComment">
    update child_comment
    <set>
      <if test="fatherId != null">
        father_id = #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="from != null">
        `from` = #{from,jdbcType=INTEGER},
      </if>
      <if test="to != null">
        `to` = #{to,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="up != null">
        up = #{up,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.music.domain.ChildComment">
    update child_comment
    set father_id = #{fatherId,jdbcType=INTEGER},
      `from` = #{from,jdbcType=INTEGER},
      `to` = #{to,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      up = #{up,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>