<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.music.dao.SingerDao">
  <resultMap id="BaseResultMap" type="com.springboot.music.domain.Singer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="birth" jdbcType="TIMESTAMP" property="birth" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, sex, pic, birth, `location`, introduction
  </sql>
  <select id="allSinger" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from singer
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from singer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from singer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.springboot.music.domain.Singer" useGeneratedKeys="true">
    insert into singer (`name`, sex, pic, 
      birth, `location`, introduction
      )
    values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{pic,jdbcType=VARCHAR}, 
      #{birth,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.springboot.music.domain.Singer" useGeneratedKeys="true">
    insert into singer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateSingerPic" parameterType="com.springboot.music.domain.Consumer" >
    update singer
    <set >
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.music.domain.Singer">
    update singer
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.music.domain.Singer">
    update singer
    set `name` = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      pic = #{pic,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=TIMESTAMP},
      `location` = #{location,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>